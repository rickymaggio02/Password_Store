import smtplib, ssl, random, requests, json, getpass

def true_random_password():
    url = "https://api.random.org/json-rpc/2/invoke" #true random generated by environmental noise
    api_key = "your_api_key" #your api-key from here https://api.random.org/

    payload = json.dumps({"jsonrpc": "2.0", "method": "generateStrings", "params": {"apiKey": api_key, "n": 1, "length": 10, "characters": "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}, "id": 42})

    headers = {'content-type': "application/json", 'cache-control': "no-cache"}

    api_response = requests.post(url, data=payload, headers=headers).json()

    password = api_response['result']['random']['data'][0]

    return password


def secondLevel():
    port = 587 #you could use also 465 for ssl but you have to make a little change in the final lines
    email = "no-reply@passwordstore.com" #the automatic email
    password = "password" #email's password

    user_email = "user@email.com" #this could be saved on the DB the the hashed password

    context = ssl.create_default_context()

    generated_code = true_random_password()

    message = """\
    Subject: Second Authentification for Password Store

    Code: """ + generated_code + """ 

    Use it to access to your vault.


    --DO NOT ANSWER TO THIS E-MAIL--
    """

    with smtplib.SMTP("smtp.passwordstore.com", port) as server:
        server.ehlo()
        server.starttls(context=context)
        server.ehlo()
        server.login(email, password)
        server.sendmail(email, user_email, message)

    return generated_code